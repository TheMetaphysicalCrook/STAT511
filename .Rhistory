## (3) Residual diagnostic plots
##
##
#################################################
##
## Diagnostic plots
##
## plot fitted values vs residuals (check for heteroscedasticity)
plot(yhat,res)
## plot residuals vs each covariate (check for heteroscedasticity and nonlinearity)
plot(Munich$area,res)
abline(0,0,col="red")
plot(Munich$yearc,res)
abline(0,0,col="red")
## partial residual plots (requires the "car" package)
library(car)
crPlots(fit)
## partial residual plots using prp.r
## (put "prp.r" in your R working directory, or copy/paste it into R)
source("prp.r")
prp(fit,Munich,names=c("area","yearc"))
## QQ-plot of residuals (check normality)
qqnorm(res)
qqline(res)
#################################################
##
##
## (5) Manipulating variables within lm
##
##
#################################################
##
## lm allows you to manipulate variables within the "formula" statement
##
## EX1: log-transform response
fit=lm(log(rent)~area+yearc,data=Munich)
summary(fit)
## EX2: log-transform "area"
fit=lm(rent~log(area)+yearc,data=Munich)
summary(fit)
##
## The "I" function is used to transform variables when the
##   transformation is not written as a function in R
##   EX: polynomial powers, inverse, ...
##
## EX3: inverse of "area" DOESNT WORK WITHOUT "I"
fit=lm(rent~1/area+yearc,data=Munich)
summary(fit)
## EX4: inverse of "area"    USING "I"
fit=lm(rent~I(1/area)+yearc,data=Munich)
summary(fit)
## EX5  polynomial powers of area
fit=lm(rent~area+I(area^2)+I(area^3)+yearc,data=Munich)
summary(fit)
##
## Instead of using the polynomials in EX4 and EX5 above,
##  it is often preferable to use ORTHOGONAL polynomial
##  basis functions.  These can be obtained using "poly"
##
w=1:100
X=poly(w,degree=4)
matplot(X)
## the resulting polynomial basis functions are all orthogonal:
t(X)%*%X
## and zero-centered
summary(X)
## EX6 polynomial powers of area using "poly"
fit=lm(rent~poly(area,3)+yearc,data=Munich)
summary(fit)
## partial residual plots (requires the "car" package)
library(car)
crPlots(fit)
## partial residual plots using prp.r
## (put "prp.r" in your R working directory, or copy/paste it into the R console)
source("prp.r")
prp(fit,Munich,names=c("area","yearc"))
library(reshape)
setwd("/Users/benStraub/Desktop/STAT511")
Munich = read.csv("rent99.raw", sep="")
fit.Mun=lm(Rent~Area+Yearc,data=Munich)
fit.Mun=lm(rent~area+yearc,data=Munich)
res=fit.Mun$resid
hist(res)
yhat=fit.Mun$fitted.values
plot(yhat,res)
plot(new_Munich$Area,res)
abline(0,0,col="red")
plot(new_Munich$Yearc,res)
abline(0,0,col="red")
library(car)
crPlots(fit.Mun)
source("prp.r")
prp(fit.Mun,new_Munich,names=c("area","yearc"))
prp(fit.Mun,Munich,names=c("area","yearc"))
qqnorm(res)
qqline(res)
summary(Munich)
summary(Munich[,1])
summary(Munich[1,])
library(reshape)
setwd("/Users/benStraub/Desktop/STAT511")
Munich = read.csv("rent99.raw", sep="")
new_Munich <- Munich[,c(1,2,3,4)]
new_Munich <- rename(Munich, c(area = "Area"))
new_Munich <- rename(Munich, c(rent = "Rent"))
new_Munich <- rename(Munich, c(yearc = "Yearc"))
summary(new_Munich)
Munich = read.csv("rent99.raw", sep="")
new_Munich <- Munich[,c(1,2,3,4)]
new_Munich <- rename(new_Munich, c(area = "Area"))
new_Munich <- rename(new_Munich, c(rent = "Rent"))
new_Munich <- rename(new_Munich, c(yearc = "Yearc"))
summary(new_Munich)
par(mar = rep(2, 4))
new_Munich <- Munich[,c(1,2,3,4)]
new_Munich <- rename(new_Munich, c(area = "Area"))
new_Munich <- rename(new_Munich, c(rent = "Rent"))
new_Munich <- rename(new_Munich, c(yearc = "Yearc"))
pairs(new_Munich)
res=fit.Mun$resid
hist(res)
res=fit.Mun$resid
hist(res)
res=fit.Mun$resid
m <- mean(res)
std <- sqrt(var(res))
hist(res, prob=TRUE, main = "Residuals")
curve(dnorm(x, mean=m, sd=std),
col="darkblue", lwd=2, add=TRUE, yaxt="n")
res=fit.Mun$resid
m <- mean(res)
std <- sqrt(var(res))
hist(res, prob=TRUE, main = "", ylab ="", xlab = "")
curve(dnorm(x, mean=m, sd=std),
col="darkblue", lwd=2, add=TRUE, yaxt="n")
yhat=fit.Mun$fitted.values
plot(yhat,res, main = "Fitteds against Residual ")
abline(fit, col="red")
abline(h=0, col="red")
plot(Munich$area,res)
abline(0,0,col="red")
plot(Munich$area,res, main = "Area againast Residuals")
abline(0,0,col="red")
plot(Munich$yearc,res, "YearC against Residuals")
plot(Munich$yearc,res, main = "YearC against Residuals")
abline(0,0,col="red")
crPlots(fit.Mun)
prp(fit.Mun,Munich,names=c("area","yearc"))
fit.log.Mun=lm(log(rent)~area+yearc,data=Munich)
fit.log.Mun$coef
fit.rs.Mun=lm((rentsqm)~area+yearc,data=Munich)
fit.rs.Mun$coef
fit.e.Mun=lm((rentsqm)~I(1/area)+yearc+I(yearc^2)+I(yearc^3),data=Munich)
fit.e.Mun$coef
yhat=fit$fitted.values
# plot(res~cars$Speed)
# plot(res~cars$Distance)
plot(res~yhat, main = "Check for Heteroscadacity")
abline(h=0,col="blue")
curve(x^2/100, add=TRUE)
data(cars)
fit=lm(Distance~Speed,data=cars)
data(cars)
library(reshape)
cars <- rename(cars, c(speed="Speed"))
cars <- rename(cars, c(dist="Distance"))
fit=lm(Distance~Speed,data=cars)
fit$coef
par(mfrow=c(1,3))
res=fit$resid
m <- mean(res)
std <- sqrt(var(res))
hist(res, prob=TRUE, main = "Histogram of Residuals")
curve(dnorm(x, mean=m, sd=std),
col="darkblue", lwd=2, add=TRUE, yaxt="n")
qqnorm(res)
qqline(res,col="green")
yhat=fit$fitted.values
# plot(res~cars$Speed)
# plot(res~cars$Distance)
plot(res~yhat, main = "Check for Heteroscadacity")
abline(h=0,col="blue")
curve(x^2/100, add=TRUE)
curve(x^2/100, add=TRUE, col="red")
curve(-x^2/100, add=TRUE, col="red")
curve(x^2/150, add=TRUE, col="red")
curve(-x^2/150, add=TRUE, col="red")
yhat=fit$fitted.values
# plot(res~cars$Speed)
# plot(res~cars$Distance)
plot(res~yhat, main = "Check for Heteroscadacity")
abline(h=0,col="blue")
curve(x^2/150, add=TRUE, col="red")
curve(-x^2/150, add=TRUE, col="red")
fit.poly=lm(Distance~Speed+I(Speed^2)+I(Speed^3),data=cars)
fit.poly$coef
data(cars)
library(reshape)
new_cars <- rename(cars, c(speed="Speed"))
new_cars <- rename(cars, c(dist="Distance"))
summary(new_cars)
data(cars)
#library(reshape)
#new_cars <- rename(cars, c(speed="Speed"))
#new_cars <- rename(cars, c(dist="Distance"))
summary(cars)
boxplot(cars$Speed,data=cars, main = "Speed")
boxplot(cars$Distance,data=cars, main = "Distance")
par(mfrow=c(1,2))
boxplot(cars$speed,data=cars, main = "Speed")
boxplot(cars$dist,data=cars, main = "Distance")
par(mfrow=c(2,2))
x=cars$speed
y=cars$dist
hist(x, main = "Speed", xlab="", ylab="")
hist(y, main = "Distance", xlab="", ylab="")
fit.lg=lm(log(dist)~log(speed),data=cars)
library(car)
crPlots(fit.lg)
fit.poly=lm(dist~speed+I(speed^2)+I(speed^3),data=cars)
## estimates of regression parameters
fit.poly$coef
library(car)
crPlots(fit.poly)
par(mfrow=c(1,4))
library(car)
crPlots(fit.poly)
par(mfrow=c(1,6))
library(car)
crPlots(fit.poly)
par(mfrow=c(6,6))
library(car)
crPlots(fit.poly)
par(mfrow=c(1,4))
library(car)
crPlots(fit.poly)
par(mfrow=c(2,4))
res=fit.Mun$resid
m <- mean(res)
std <- sqrt(var(res))
hist(res, prob=TRUE, main = "Residuals", ylab ="", xlab = "")
curve(dnorm(x, mean=m, sd=std),
col="darkblue", lwd=2, add=TRUE, yaxt="n")
## fitted values (y.hat = E(y|X,beta.hat))
yhat=fit.Mun$fitted.values
plot(yhat,res, main = "Fitteds against Residual ")
abline(h=0, col="red")
curve(x^2/1000, col = "blue")
curve(x^2/100, col = "blue")
curve(x^2/100, add=TRUE, col = "blue")
yhat=fit.Mun$fitted.values
plot(yhat,res, main = "Fitteds against Residual ")
abline(h=0, col="red")
curve(x^2/100, add=TRUE, col = "blue")
curve(x^2/1000, add=TRUE, col = "blue")
curve(-x^2/1000, add=TRUE, col = "blue")
qqnorm(res.log, main="Log Model")
qqline(res.log)
par(mfrow=c(2,4))
res.log=fit.log.Mun$resid
m <- mean(res.log)
std <- sqrt(var(res.log))
hist(res.log, prob=TRUE, main = "Residuals", ylab ="", xlab = "")
curve(dnorm(x, mean=m, sd=std),
col="darkblue", lwd=2, add=TRUE, yaxt="n")
## fitted values (y.hat = E(y|X,beta.hat))
yhat=fit.log.Mun$fitted.values
plot(yhat,res.log, main = "Fitteds against Residual ")
abline(h=0, col="red")
```
qqnorm(res.log, main="Log Model")
qqline(res.log)
res=fit.Mun$resid
qqnorm(res, "Linear Model")
qqline(res)
qqnorm(res, "Linear Model")
qqline(res)
qqnorm(res.log, main="Log Model")
qqline(res.log)
qqnorm(res, "Linear Model")
qqline(res)
qqnorm(res, main="Linear Model")
qqline(res)
fit.rs.Mun=lm((rentsqm)~area+yearc,data=Munich)
fit.rs.Mun$coef
par(mfrow=c(2,4))
res=fit.rs.Mun$resid
m <- mean(res)
std <- sqrt(var(res))
hist(res, prob=TRUE, main = "Residuals", ylab ="", xlab = "")
curve(dnorm(x, mean=m, sd=std),
col="darkblue", lwd=2, add=TRUE, yaxt="n")
## fitted values (y.hat = E(y|X,beta.hat))
yhat=fit.rs.Mun$fitted.values
plot(yhat,res, main = "Fitteds against Residual ")
abline(h=0, col="red")
curve(-x^2/100, add=TRUE, col="blue")
curve(-x^2/1000, add=TRUE, col="blue")
curve(-x^2/10, add=TRUE, col="blue")
curve(-x^2/15, add=TRUE, col="blue")
curve(-x^2/50, add=TRUE, col="blue")
curve(-x^2/30, add=TRUE, col="blue")
curve(-x^2/25, add=TRUE, col="blue")
par(mfrow=c(2,4))
res=fit.rs.Mun$resid
m <- mean(res)
std <- sqrt(var(res))
hist(res, prob=TRUE, main = "Residuals", ylab ="", xlab = "")
curve(dnorm(x, mean=m, sd=std),
col="darkblue", lwd=2, add=TRUE, yaxt="n")
## fitted values (y.hat = E(y|X,beta.hat))
yhat=fit.rs.Mun$fitted.values
plot(yhat,res, main = "Fitteds against Residual ")
abline(h=0, col="red")
curve(-x^2/75, add=TRUE, col="blue")
curve(-x^2/10, add=TRUE, col="blue")
curve(-x^2/10, add=TRUE, col="blue", lwd=3)
fit.rs.Mun=lm((rentsqm)~area+yearc,data=Munich)
fit.rs.Mun$coef
par(mfrow=c(2,4))
res.sqm=fit.rs.Mun$resid
m <- mean(res.sqm)
std <- sqrt(var(res.sqm))
hist(res, prob=TRUE, main = "Residuals", ylab ="", xlab = "")
curve(dnorm(x, mean=m, sd=std),
col="darkblue", lwd=2, add=TRUE, yaxt="n")
## fitted values (y.hat = E(y|X,beta.hat))
yhat=fit.rs.Mun$fitted.values
plot(yhat,res.sqm, main = "Fitteds against Residual ")
abline(h=0, col="red")
curve(-x^2/10, add=TRUE, col="blue", lwd=3)
par(mfrow=c(2,4))
## plot residuals vs each covariate (check for heteroscedasticity and nonlinearity)
plot(Munich$area,res.sqm, main = "Area against Residuals")
abline(0,0,col="red")
plot(Munich$yearc,res.sqm, main = "YearC against Residuals")
abline(0,0,col="red")
qqnorm(res.sqm)
qqline(res.sqm)
qqnorm(res.sqm, main= "RentSqm")
qqline(res.sqm)
qqnorm(res.log, main="Log Model")
qqline(res.log)
qqnorm(res, main="Linear Model")
qqline(res)
dev.off()
qqnorm(res.sqm, main= "RentSqm")
qqline(res.sqm)
qqnorm(res.log, main="Log Model")
qqline(res.log)
qqnorm(res, main="Linear Model")
qqline(res)
par(mfrow=c(1,4))
qqnorm(res.sqm, main= "RentSqm")
qqline(res.sqm)
qqnorm(res.log, main="Log Model")
qqline(res.log)
qqnorm(res, main="Linear Model")
qqline(res)
par(mfrow=c(2,4))
qqnorm(res.sqm, main= "RentSqm")
qqline(res.sqm)
qqnorm(res.log, main="Log Model")
qqline(res.log)
qqnorm(res, main="Linear Model")
qqline(res)
par(mfrow=c(2,4))
res.sqm=fit.rs.Mun$resid
m <- mean(res.sqm)
std <- sqrt(var(res.sqm))
hist(res, prob=TRUE, main = "Residuals", ylab ="", xlab = "")
curve(dnorm(x, mean=m, sd=std),
col="darkblue", lwd=2, add=TRUE, yaxt="n")
## fitted values (y.hat = E(y|X,beta.hat))
yhat=fit.rs.Mun$fitted.values
plot(yhat,res.sqm, main = "Fitteds against Residual ")
abline(h=0, col="red")
curve(-x^2/10, add=TRUE, col="blue", lwd=3)
fit.e.Mun=lm((rentsqm)~I(1/area)+yearc+I(yearc^2)+I(yearc^3),data=Munich)
fit.e.Mun$coef
par(mfrow=c(2,4))
res=fit.e.Mun$resid
m <- mean(res)
std <- sqrt(var(res))
hist(res, prob=TRUE, main = "Residuals", ylab ="", xlab = "")
curve(dnorm(x, mean=m, sd=std),
col="darkblue", lwd=2, add=TRUE, yaxt="n")
## fitted values (y.hat = E(y|X,beta.hat))
yhat=fit.e.Mun$fitted.values
plot(yhat,res, main = "Fitteds against Residual ")
abline(h=0, col="red")
par(mfrow=c(1,2))
res=fit.e.Mun$resid
m <- mean(res)
std <- sqrt(var(res))
hist(res, prob=TRUE, main = "Residuals", ylab ="", xlab = "")
curve(dnorm(x, mean=m, sd=std),
col="darkblue", lwd=2, add=TRUE, yaxt="n")
## fitted values (y.hat = E(y|X,beta.hat))
yhat=fit.e.Mun$fitted.values
plot(yhat,res, main = "Fitteds against Residual ")
abline(h=0, col="red")
par(mfrow=c(2,4))
## plot residuals vs each covariate (check for heteroscedasticity and nonlinearity)
plot(Munich$area,res.sqm, main = "Area against Residuals")
abline(0,0,col="red")
plot(Munich$yearc,res.sqm, main = "YearC against Residuals")
abline(0,0,col="red")
par(mfrow=c(1,2))
## plot residuals vs each covariate (check for heteroscedasticity and nonlinearity)
plot(Munich$area,res.sqm, main = "Area against Residuals")
abline(0,0,col="red")
plot(Munich$yearc,res.sqm, main = "YearC against Residuals")
abline(0,0,col="red")
fit.e.Mun=lm((rentsqm)~I(1/area)+yearc+I(yearc^2)+I(yearc^3),data=Munich)
par(mfrow=c(1,2))
res=fit.e.Mun$resid
m <- mean(res)
std <- sqrt(var(res))
hist(res, prob=TRUE, main = "Residuals", ylab ="", xlab = "")
curve(dnorm(x, mean=m, sd=std),
col="darkblue", lwd=2, add=TRUE, yaxt="n")
## fitted values (y.hat = E(y|X,beta.hat))
yhat=fit.e.Mun$fitted.values
plot(yhat,res, main = "Fitteds against Residual ")
abline(h=0, col="red")
par(mfrow=c(2,4))
## plot residuals vs each covariate (check for heteroscedasticity and nonlinearity)
plot(Munich$area,res, main = "Area against Residuals")
abline(0,0,col="red")
plot(Munich$yearc,res, main = "YearC against Residuals")
abline(0,0,col="red")
par(mfrow=c(1,2))
## plot residuals vs each covariate (check for heteroscedasticity and nonlinearity)
plot(Munich$area,res, main = "Area against Residuals")
abline(0,0,col="red")
plot(Munich$yearc,res, main = "YearC against Residuals")
abline(0,0,col="red")
par(mfrow=c(2,4))
qqnorm(res, main="Function Model")
qqline(res)
qqnorm(res.sqm, main= "RentSqm Model")
qqline(res.sqm)
qqnorm(res.log, main="Log Model")
qqline(res.log)
qqnorm(res, main="Linear Model")
qqline(res)
fit.e.Mun$coef
2.941931e+04
1.295717e+02
-4.330369e+01
2.118881e-02
-3.444886e-06
fit.Mun=lm(rent~area+yearc,data=Munich)
fit.e.Mun=lm((rentsqm)~I(1/area)+yearc+I(yearc^2)+I(yearc^3),data=Munich)
fit.e.Mun$coef
par(mfrow=c(1,2))
res.e=fit.e.Mun$resid
m <- mean(res.e)
std <- sqrt(var(res.e))
hist(res, prob=TRUE, main = "Residuals", ylab ="", xlab = "")
curve(dnorm(x, mean=m, sd=std),
col="darkblue", lwd=2, add=TRUE, yaxt="n")
## fitted values (y.hat = E(y|X,beta.hat))
yhat=fit.e.Mun$fitted.values
plot(yhat,res.e, main = "Fitteds against Residual ")
abline(h=0, col="red")
par(mfrow=c(1,2))
## plot residuals vs each covariate (check for heteroscedasticity and nonlinearity)
plot(Munich$area,res.e, main = "Area against Residuals", xlab="Area", ylab="")
abline(0,0,col="red")
plot(Munich$yearc,res.e, main = "YearC against Residuals", xlab="YearC", ylab="")
abline(0,0,col="red")
par(mfrow=c(1,2))
qqnorm(res.e, main="Function Model")
qqline(res.e)
qqnorm(res.sqm, main= "RentSqm Model")
qqline(res.sqm)
qqnorm(res.log, main="Log Model")
qqline(res.log)
qqnorm(res, main="Linear Model")
qqline(res)
par(mfrow=c(1,2))
res.e=fit.e.Mun$resid
m <- mean(res.e)
std <- sqrt(var(res.e))
hist(res, prob=TRUE, main = "Residuals", ylab ="", xlab = "")
curve(dnorm(x, mean=m, sd=std),
col="darkblue", lwd=2, add=TRUE, yaxt="n")
## fitted values (y.hat = E(y|X,beta.hat))
yhat=fit.e.Mun$fitted.values
plot(yhat,res.e, main = "Fitteds against Residual ")
abline(h=0, col="red")
```{r, echo=F, comment=NA}
par(mfrow=c(1,2))
## plot residuals vs each covariate (check for heteroscedasticity and nonlinearity)
plot(Munich$area,res.sqm, main = "Area against Residuals", xlab="", ylab="")
abline(0,0,col="red")
plot(Munich$yearc,res.sqm, main = "YearC against Residuals", xlab="", ylab="")
abline(0,0,col="red")
```
res.sqm=fit.rs.Mun$resid
m <- mean(res.sqm)
std <- sqrt(var(res.sqm))
hist(res, prob=TRUE, main = "Residuals", ylab ="", xlab = "")
curve(dnorm(x, mean=m, sd=std),
col="darkblue", lwd=2, add=TRUE, yaxt="n")
## fitted values (y.hat = E(y|X,beta.hat))
yhat=fit.rs.Mun$fitted.values
plot(yhat,res.sqm, main = "Fitteds against Residual ")
abline(h=0, col="red")
curve(-x^2/10, add=TRUE, col="blue", lwd=3)
