cars <- rename(cars, c(dist="Distance"))
fit=lm(Distance~Speed,data=cars)
fit$coef
par(mfrow=c(1,3))
res=fit$resid
m <- mean(res)
std <- sqrt(var(res))
hist(res, prob=TRUE, main = "Histogram of Residuals")
curve(dnorm(x, mean=m, sd=std),
col="darkblue", lwd=2, add=TRUE, yaxt="n")
qqnorm(res)
qqline(res,col="green")
yhat=fit$fitted.values
# plot(res~cars$Speed)
# plot(res~cars$Distance)
plot(res~yhat, main = "Check for Heteroscadacity")
abline(h=0,col="blue")
curve(x^2/100, add=TRUE)
curve(x^2/100, add=TRUE, col="red")
curve(-x^2/100, add=TRUE, col="red")
curve(x^2/150, add=TRUE, col="red")
curve(-x^2/150, add=TRUE, col="red")
yhat=fit$fitted.values
# plot(res~cars$Speed)
# plot(res~cars$Distance)
plot(res~yhat, main = "Check for Heteroscadacity")
abline(h=0,col="blue")
curve(x^2/150, add=TRUE, col="red")
curve(-x^2/150, add=TRUE, col="red")
fit.poly=lm(Distance~Speed+I(Speed^2)+I(Speed^3),data=cars)
fit.poly$coef
data(cars)
library(reshape)
new_cars <- rename(cars, c(speed="Speed"))
new_cars <- rename(cars, c(dist="Distance"))
summary(new_cars)
data(cars)
#library(reshape)
#new_cars <- rename(cars, c(speed="Speed"))
#new_cars <- rename(cars, c(dist="Distance"))
summary(cars)
boxplot(cars$Speed,data=cars, main = "Speed")
boxplot(cars$Distance,data=cars, main = "Distance")
par(mfrow=c(1,2))
boxplot(cars$speed,data=cars, main = "Speed")
boxplot(cars$dist,data=cars, main = "Distance")
par(mfrow=c(2,2))
x=cars$speed
y=cars$dist
hist(x, main = "Speed", xlab="", ylab="")
hist(y, main = "Distance", xlab="", ylab="")
fit.lg=lm(log(dist)~log(speed),data=cars)
library(car)
crPlots(fit.lg)
fit.poly=lm(dist~speed+I(speed^2)+I(speed^3),data=cars)
## estimates of regression parameters
fit.poly$coef
library(car)
crPlots(fit.poly)
par(mfrow=c(1,4))
library(car)
crPlots(fit.poly)
par(mfrow=c(1,6))
library(car)
crPlots(fit.poly)
par(mfrow=c(6,6))
library(car)
crPlots(fit.poly)
par(mfrow=c(1,4))
library(car)
crPlots(fit.poly)
par(mfrow=c(2,4))
res=fit.Mun$resid
m <- mean(res)
std <- sqrt(var(res))
hist(res, prob=TRUE, main = "Residuals", ylab ="", xlab = "")
curve(dnorm(x, mean=m, sd=std),
col="darkblue", lwd=2, add=TRUE, yaxt="n")
## fitted values (y.hat = E(y|X,beta.hat))
yhat=fit.Mun$fitted.values
plot(yhat,res, main = "Fitteds against Residual ")
abline(h=0, col="red")
curve(x^2/1000, col = "blue")
curve(x^2/100, col = "blue")
curve(x^2/100, add=TRUE, col = "blue")
yhat=fit.Mun$fitted.values
plot(yhat,res, main = "Fitteds against Residual ")
abline(h=0, col="red")
curve(x^2/100, add=TRUE, col = "blue")
curve(x^2/1000, add=TRUE, col = "blue")
curve(-x^2/1000, add=TRUE, col = "blue")
qqnorm(res.log, main="Log Model")
qqline(res.log)
par(mfrow=c(2,4))
res.log=fit.log.Mun$resid
m <- mean(res.log)
std <- sqrt(var(res.log))
hist(res.log, prob=TRUE, main = "Residuals", ylab ="", xlab = "")
curve(dnorm(x, mean=m, sd=std),
col="darkblue", lwd=2, add=TRUE, yaxt="n")
## fitted values (y.hat = E(y|X,beta.hat))
yhat=fit.log.Mun$fitted.values
plot(yhat,res.log, main = "Fitteds against Residual ")
abline(h=0, col="red")
```
qqnorm(res.log, main="Log Model")
qqline(res.log)
res=fit.Mun$resid
qqnorm(res, "Linear Model")
qqline(res)
qqnorm(res, "Linear Model")
qqline(res)
qqnorm(res.log, main="Log Model")
qqline(res.log)
qqnorm(res, "Linear Model")
qqline(res)
qqnorm(res, main="Linear Model")
qqline(res)
fit.rs.Mun=lm((rentsqm)~area+yearc,data=Munich)
fit.rs.Mun$coef
par(mfrow=c(2,4))
res=fit.rs.Mun$resid
m <- mean(res)
std <- sqrt(var(res))
hist(res, prob=TRUE, main = "Residuals", ylab ="", xlab = "")
curve(dnorm(x, mean=m, sd=std),
col="darkblue", lwd=2, add=TRUE, yaxt="n")
## fitted values (y.hat = E(y|X,beta.hat))
yhat=fit.rs.Mun$fitted.values
plot(yhat,res, main = "Fitteds against Residual ")
abline(h=0, col="red")
curve(-x^2/100, add=TRUE, col="blue")
curve(-x^2/1000, add=TRUE, col="blue")
curve(-x^2/10, add=TRUE, col="blue")
curve(-x^2/15, add=TRUE, col="blue")
curve(-x^2/50, add=TRUE, col="blue")
curve(-x^2/30, add=TRUE, col="blue")
curve(-x^2/25, add=TRUE, col="blue")
par(mfrow=c(2,4))
res=fit.rs.Mun$resid
m <- mean(res)
std <- sqrt(var(res))
hist(res, prob=TRUE, main = "Residuals", ylab ="", xlab = "")
curve(dnorm(x, mean=m, sd=std),
col="darkblue", lwd=2, add=TRUE, yaxt="n")
## fitted values (y.hat = E(y|X,beta.hat))
yhat=fit.rs.Mun$fitted.values
plot(yhat,res, main = "Fitteds against Residual ")
abline(h=0, col="red")
curve(-x^2/75, add=TRUE, col="blue")
curve(-x^2/10, add=TRUE, col="blue")
curve(-x^2/10, add=TRUE, col="blue", lwd=3)
fit.rs.Mun=lm((rentsqm)~area+yearc,data=Munich)
fit.rs.Mun$coef
par(mfrow=c(2,4))
res.sqm=fit.rs.Mun$resid
m <- mean(res.sqm)
std <- sqrt(var(res.sqm))
hist(res, prob=TRUE, main = "Residuals", ylab ="", xlab = "")
curve(dnorm(x, mean=m, sd=std),
col="darkblue", lwd=2, add=TRUE, yaxt="n")
## fitted values (y.hat = E(y|X,beta.hat))
yhat=fit.rs.Mun$fitted.values
plot(yhat,res.sqm, main = "Fitteds against Residual ")
abline(h=0, col="red")
curve(-x^2/10, add=TRUE, col="blue", lwd=3)
par(mfrow=c(2,4))
## plot residuals vs each covariate (check for heteroscedasticity and nonlinearity)
plot(Munich$area,res.sqm, main = "Area against Residuals")
abline(0,0,col="red")
plot(Munich$yearc,res.sqm, main = "YearC against Residuals")
abline(0,0,col="red")
qqnorm(res.sqm)
qqline(res.sqm)
qqnorm(res.sqm, main= "RentSqm")
qqline(res.sqm)
qqnorm(res.log, main="Log Model")
qqline(res.log)
qqnorm(res, main="Linear Model")
qqline(res)
dev.off()
qqnorm(res.sqm, main= "RentSqm")
qqline(res.sqm)
qqnorm(res.log, main="Log Model")
qqline(res.log)
qqnorm(res, main="Linear Model")
qqline(res)
par(mfrow=c(1,4))
qqnorm(res.sqm, main= "RentSqm")
qqline(res.sqm)
qqnorm(res.log, main="Log Model")
qqline(res.log)
qqnorm(res, main="Linear Model")
qqline(res)
par(mfrow=c(2,4))
qqnorm(res.sqm, main= "RentSqm")
qqline(res.sqm)
qqnorm(res.log, main="Log Model")
qqline(res.log)
qqnorm(res, main="Linear Model")
qqline(res)
par(mfrow=c(2,4))
res.sqm=fit.rs.Mun$resid
m <- mean(res.sqm)
std <- sqrt(var(res.sqm))
hist(res, prob=TRUE, main = "Residuals", ylab ="", xlab = "")
curve(dnorm(x, mean=m, sd=std),
col="darkblue", lwd=2, add=TRUE, yaxt="n")
## fitted values (y.hat = E(y|X,beta.hat))
yhat=fit.rs.Mun$fitted.values
plot(yhat,res.sqm, main = "Fitteds against Residual ")
abline(h=0, col="red")
curve(-x^2/10, add=TRUE, col="blue", lwd=3)
fit.e.Mun=lm((rentsqm)~I(1/area)+yearc+I(yearc^2)+I(yearc^3),data=Munich)
fit.e.Mun$coef
par(mfrow=c(2,4))
res=fit.e.Mun$resid
m <- mean(res)
std <- sqrt(var(res))
hist(res, prob=TRUE, main = "Residuals", ylab ="", xlab = "")
curve(dnorm(x, mean=m, sd=std),
col="darkblue", lwd=2, add=TRUE, yaxt="n")
## fitted values (y.hat = E(y|X,beta.hat))
yhat=fit.e.Mun$fitted.values
plot(yhat,res, main = "Fitteds against Residual ")
abline(h=0, col="red")
par(mfrow=c(1,2))
res=fit.e.Mun$resid
m <- mean(res)
std <- sqrt(var(res))
hist(res, prob=TRUE, main = "Residuals", ylab ="", xlab = "")
curve(dnorm(x, mean=m, sd=std),
col="darkblue", lwd=2, add=TRUE, yaxt="n")
## fitted values (y.hat = E(y|X,beta.hat))
yhat=fit.e.Mun$fitted.values
plot(yhat,res, main = "Fitteds against Residual ")
abline(h=0, col="red")
par(mfrow=c(2,4))
## plot residuals vs each covariate (check for heteroscedasticity and nonlinearity)
plot(Munich$area,res.sqm, main = "Area against Residuals")
abline(0,0,col="red")
plot(Munich$yearc,res.sqm, main = "YearC against Residuals")
abline(0,0,col="red")
par(mfrow=c(1,2))
## plot residuals vs each covariate (check for heteroscedasticity and nonlinearity)
plot(Munich$area,res.sqm, main = "Area against Residuals")
abline(0,0,col="red")
plot(Munich$yearc,res.sqm, main = "YearC against Residuals")
abline(0,0,col="red")
fit.e.Mun=lm((rentsqm)~I(1/area)+yearc+I(yearc^2)+I(yearc^3),data=Munich)
par(mfrow=c(1,2))
res=fit.e.Mun$resid
m <- mean(res)
std <- sqrt(var(res))
hist(res, prob=TRUE, main = "Residuals", ylab ="", xlab = "")
curve(dnorm(x, mean=m, sd=std),
col="darkblue", lwd=2, add=TRUE, yaxt="n")
## fitted values (y.hat = E(y|X,beta.hat))
yhat=fit.e.Mun$fitted.values
plot(yhat,res, main = "Fitteds against Residual ")
abline(h=0, col="red")
par(mfrow=c(2,4))
## plot residuals vs each covariate (check for heteroscedasticity and nonlinearity)
plot(Munich$area,res, main = "Area against Residuals")
abline(0,0,col="red")
plot(Munich$yearc,res, main = "YearC against Residuals")
abline(0,0,col="red")
par(mfrow=c(1,2))
## plot residuals vs each covariate (check for heteroscedasticity and nonlinearity)
plot(Munich$area,res, main = "Area against Residuals")
abline(0,0,col="red")
plot(Munich$yearc,res, main = "YearC against Residuals")
abline(0,0,col="red")
par(mfrow=c(2,4))
qqnorm(res, main="Function Model")
qqline(res)
qqnorm(res.sqm, main= "RentSqm Model")
qqline(res.sqm)
qqnorm(res.log, main="Log Model")
qqline(res.log)
qqnorm(res, main="Linear Model")
qqline(res)
fit.e.Mun$coef
2.941931e+04
1.295717e+02
-4.330369e+01
2.118881e-02
-3.444886e-06
fit.Mun=lm(rent~area+yearc,data=Munich)
fit.e.Mun=lm((rentsqm)~I(1/area)+yearc+I(yearc^2)+I(yearc^3),data=Munich)
fit.e.Mun$coef
par(mfrow=c(1,2))
res.e=fit.e.Mun$resid
m <- mean(res.e)
std <- sqrt(var(res.e))
hist(res, prob=TRUE, main = "Residuals", ylab ="", xlab = "")
curve(dnorm(x, mean=m, sd=std),
col="darkblue", lwd=2, add=TRUE, yaxt="n")
## fitted values (y.hat = E(y|X,beta.hat))
yhat=fit.e.Mun$fitted.values
plot(yhat,res.e, main = "Fitteds against Residual ")
abline(h=0, col="red")
par(mfrow=c(1,2))
## plot residuals vs each covariate (check for heteroscedasticity and nonlinearity)
plot(Munich$area,res.e, main = "Area against Residuals", xlab="Area", ylab="")
abline(0,0,col="red")
plot(Munich$yearc,res.e, main = "YearC against Residuals", xlab="YearC", ylab="")
abline(0,0,col="red")
par(mfrow=c(1,2))
qqnorm(res.e, main="Function Model")
qqline(res.e)
qqnorm(res.sqm, main= "RentSqm Model")
qqline(res.sqm)
qqnorm(res.log, main="Log Model")
qqline(res.log)
qqnorm(res, main="Linear Model")
qqline(res)
par(mfrow=c(1,2))
res.e=fit.e.Mun$resid
m <- mean(res.e)
std <- sqrt(var(res.e))
hist(res, prob=TRUE, main = "Residuals", ylab ="", xlab = "")
curve(dnorm(x, mean=m, sd=std),
col="darkblue", lwd=2, add=TRUE, yaxt="n")
## fitted values (y.hat = E(y|X,beta.hat))
yhat=fit.e.Mun$fitted.values
plot(yhat,res.e, main = "Fitteds against Residual ")
abline(h=0, col="red")
```{r, echo=F, comment=NA}
par(mfrow=c(1,2))
## plot residuals vs each covariate (check for heteroscedasticity and nonlinearity)
plot(Munich$area,res.sqm, main = "Area against Residuals", xlab="", ylab="")
abline(0,0,col="red")
plot(Munich$yearc,res.sqm, main = "YearC against Residuals", xlab="", ylab="")
abline(0,0,col="red")
```
res.sqm=fit.rs.Mun$resid
m <- mean(res.sqm)
std <- sqrt(var(res.sqm))
hist(res, prob=TRUE, main = "Residuals", ylab ="", xlab = "")
curve(dnorm(x, mean=m, sd=std),
col="darkblue", lwd=2, add=TRUE, yaxt="n")
## fitted values (y.hat = E(y|X,beta.hat))
yhat=fit.rs.Mun$fitted.values
plot(yhat,res.sqm, main = "Fitteds against Residual ")
abline(h=0, col="red")
curve(-x^2/10, add=TRUE, col="blue", lwd=3)
getwd()
list.files()
list.files()
oly = read.csv("Olympic.numbers", sep="")
setwd("/Users/benStraub/Desktop/STAT511")
list.files()
oly = read.csv("Olympics.numbers", sep="")
View(oly)
oly = read.csv("Olympics.numbers", sep=",")
setwd("/Users/benStraub/Desktop/STAT511")
list.files
list.files()
list.files()
oly = read.csv("Olympics.(1).csv", sep=",")
oly = read.csv("Olympics (1).csv", sep=",")
View(oly)
fit=lm(goldtime~year*factor(gender),data=oly)
plot(fit)
summary(fit)
beta.hat=fit$coeff
beta.hat
##
## plotting interaction effect
##
plot(oly$year,oly$goldtime,pch=20,col=oly$gender+1)
abline(beta.hat[1],beta.hat[2],lwd=5)
abline(beta.hat[1]+beta.hat[3],beta.hat[2]+beta.hat[4],lwd=5,col=2)
plot(goldtime~year*factor(gender),data=oly)
boxplot(goldtime)
boxplot(oly$goldtime)
boxplot(oly$goldtime, factor(gender))
boxplot(oly$goldtime, factor(oly$gender))
boxplot(oly$goldtime ~ oly$gender)
male_oly <- oly[ which(oly$gender=='M']
male_oly <- oly[which(oly$gender=='M')]
male_oly <- oly[ which(oly$gender=='M'), ]
female_oly <- oly[ which(oly$gender=='F'), ]
View(male_oly)
View(female_oly)
View(oly)
female_oly <- oly[ which(oly$gender=='W'), ]
View(female_oly)
summary(male_oly)
oly<- oly[c(-4,-5)]
View(oly)
male_oly <- oly[ which(oly$gender=='M'), ]
female_oly <- oly[ which(oly$gender=='W'), ]
summary(male_oly)
summary(female_oly)
plot(oly$goldtime, oly$year)
plot(oly$year, oly$goldtime)
lm.goldtime=lm(goldtime~year,data=oly)
xvals=data.frame(year=seq(20,160,by=1))
yvals=predict(lm.goldtime,xvals)
## plot regression line
points(xvals$year,yvals,type="l",col="red",lwd=3)
plot(oly$year, oly$goldtime)
lm.goldtime=lm(goldtime~year,data=oly)
plot(oly$year, oly$goldtime)
xvals=data.frame(year=seq(20,160,by=1))
yvals=predict(lm.goldtime,xvals)
## plot regression line
points(xvals$year,yvals,type="l",col="red",lwd=3)
lm.goldtime=lm(goldtime~year,data=oly)
plot(oly$year, oly$goldtime)
xvals=data.frame(year=seq(2,16,by=1))
yvals=predict(lm.goldtime,xvals)
## plot regression line
points(xvals$year,yvals,type="l",col="red",lwd=3)
xvals=data.frame(year=seq(2,16,by=1))
xvals
View(oly)
xvals=data.frame(year=seq(1900, 2004,by=4))
xvals
lm.goldtime=lm(goldtime~year,data=oly)
plot(oly$year, oly$goldtime)
xvals=data.frame(year=seq(1900, 2004,by=4))
yvals=predict(lm.goldtime,xvals)
## plot regression line
points(xvals$year,yvals,type="l",col="red",lwd=3)
lm.goldtime=lm(goldtime~year,data=oly)
plot(oly$year, oly$goldtime)
xvals=data.frame(year=seq(1900, 2004,by=4))
yvals=predict(lm.goldtime,xvals)
## plot regression line
points(xvals$year,yvals,type="l",col="pink",lwd=3)
lm.goldtime=lm(goldtime~year,data=oly)
plot(oly$year, oly$goldtime)
xvals=data.frame(year=seq(1900, 2004,by=4))
yvals=predict(lm.goldtime,xvals)
## plot regression line
points(xvals$year,yvals,type="l",col="purple",lwd=3)
lm.goldtime=lm(goldtime~year,data=oly)
plot(oly$year, oly$goldtime, xlab="Year", ylab ="Gold Time")
xvals=data.frame(year=seq(1900, 2004,by=4))
yvals=predict(lm.goldtime,xvals)
## plot regression line
points(xvals$year,yvals,type="l",col="purple",lwd=3)
summary(lm.goldtime)
summary(fit)
fit$coef
## residuals
res=fit$resid
hist(res)
## fitted values (y.hat = E(y|X,beta.hat))
yhat=fit$fitted.values
plot(yhat,y)
summary(fit)
fit$coef
## residuals
res=fit$resid
hist(res)
## fitted values (y.hat = E(y|X,beta.hat))
yhat=fit$fitted.values
plot(yhat, res)
abline(h=0, col ="blue")
plot(yhat,res,col=oly$gender+1,pch=20,cex=3)
fit=lm(goldtime~year+gender,data=oly)
summary(fit)
fit=lm(goldtime~year+gender,data=oly)
summary(fit)
fit=lm(goldtime~year+gender,data=oly)
summary(fit)
plot(yhat,res,col=oly$gender+1,pch=20,cex=3)
fit=lm(goldtime~year*factor(gender),data=oly)
summary(fit)
plot(yhat, res)
plot(yhat,res,col=oly$gender+1,pch=20,cex=3)
plot(yhat,res,col=oly$factor(gender),pch=20,cex=3)
plot(yhat,res,col=factor(oly$gender),pch=20,cex=3)
plot(yhat,res,col=factor(oly$gender),pch=20,cex=1)
plot(yhat,res,col=factor(oly$gender),pch=20,cex=2)
plot(yhat,res,col=factor(oly$gender),pch=20,cex=2, main="Split by Gender")
fit=lm(goldtime~year*factor(gender),data=oly)
summary(fit)
beta.hat=fit$coeff
beta.hat
##
## plotting interaction effect
##
plot(oly$year,oly$goldtime,pch=20,col=oly$gender+1)
abline(beta.hat[1],beta.hat[2],lwd=5)
abline(beta.hat[1]+beta.hat[3],beta.hat[2]+beta.hat[4],lwd=5,col=2)
fit=lm(goldtime~year*factor(gender),data=oly)
summary(fit)
beta.hat=fit$coeff
beta.hat
##
## plotting interaction effect
##
plot(oly$year,oly$goldtime,pch=20,col=oly$factor(gender)
abline(beta.hat[1],beta.hat[2],lwd=3)
abline(beta.hat[1]+beta.hat[3],beta.hat[2]+beta.hat[4],lwd=3,col=2)
fit=lm(goldtime~year*factor(gender),data=oly)
summary(fit)
beta.hat=fit$coeff
beta.hat
##
## plotting interaction effect
##
plot(oly$year,oly$goldtime,pch=20,col=factor(gender))
abline(beta.hat[1],beta.hat[2],lwd=3)
abline(beta.hat[1]+beta.hat[3],beta.hat[2]+beta.hat[4],lwd=3,col=2)
plot(oly$year,oly$goldtime,pch=20,col=gender)
plot(oly$year,oly$goldtime,pch=20,col="gender")
